[project]
name = "tables-io"
license = {file = "LICENSE"}
readme = "README.md"
authors = [
    { name = "Eric Charles", email = "echarles@slac.stanford.edu" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
]
dynamic = ["version"]
dependencies = [
    "numpy>=1.21.0",
    "deprecated",
    "ipykernel", # Support for Jupyter notebooks
]

# On a mac, install optional dependencies with `pip install '.[dev]'` (include the single quotes)
[project.optional-dependencies]
full = [
    "astropy",
    "tables",
    "h5py>=2.9",
    "pandas",
    "pyarrow",
]
dev = [
    "astropy",
    "h5py>=2.9",
    "pandas",
    "pyarrow",
    "mpi4py",
    "coverage",
    "pylint",
    "pytest",
    "pytest-cov",
    "flake8",
    "jax",
    "jaxlib",
    "pre-commit", # Used to run checks before finalizing a git commit
    "sphinx==6.1.3", # Used to automatically generate documentation
    "sphinx_rtd_theme==1.2.0", # Used to render documentation
    "sphinx-autoapi==2.0.1", # Used to automatically generate api documentation
]

[build-system]
requires = [
    "setuptools>=45", # Used to build and package the Python project
    "setuptools_scm>=6.2", # Gets release version from git. Makes it available programmatically
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/tables_io/_version.py"

[tool.setuptools.package-data]

[tool.coverage.run]
source = ["src/tables_io"]
branch = false

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:"
]